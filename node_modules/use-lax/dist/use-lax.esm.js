import lax from 'lax.js';
import { useRef, useEffect } from 'react';

var selector = 'lax';

function useLax(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      breakpoints = _ref.breakpoints,
      className = _ref.className;

  var requestRef = useRef();
  selector = className || selector;
  useEffect(function () {
    lax.setup({
      breakpoints: breakpoints,
      selector: "." + selector
    });

    var updateLax = function updateLax() {
      lax.update(window.scrollY);
      requestRef.current = window.requestAnimationFrame(updateLax);
    };

    requestRef.current = window.requestAnimationFrame(updateLax);
    return function () {
      if (requestRef.current) {
        window.cancelAnimationFrame(requestRef.current);
      }
    };
  }, [breakpoints, className]);
}

function useLaxElement() {
  var ref = useRef();
  useEffect(function () {
    var currentNode = ref.current;

    if (currentNode && currentNode.classList) {
      currentNode.classList.add(selector);
    }

    lax.addElement(currentNode);
    return function () {
      lax.removeElement(currentNode);
    };
  }, []);
  return ref;
}

export { useLax, useLaxElement };
