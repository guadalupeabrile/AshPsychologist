{"ast":null,"code":"var _jsxFileName = \"/Users/guadalupeabrile/Documents/4. Gestion de Proyectos/Ash Phicology Webpage/Scoda-react/src/components/Blog/BlogContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BlogItemGrid from \"./BlogItemGrid\";\nimport Pagination from \"../Pagination/Pagination\";\nimport BlogWrapper from \"./BlogWrapper\";\nimport dataPosts from \"../../data/Blog/blog-data.json\";\nimport dataPostsMasonry from \"../../data/Blog/blog-masonry-data.json\";\nimport BlogItemMasonry from \"./BlogItemMasonry\";\nimport BlogItemSidebar from \"./BlogItemSidebar\";\nimport SidebarForBlog from \"../Sidebar/SidebarForBlog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogContent = _ref => {\n  _s();\n  let {\n    type,\n    sidebar\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [masonryPosts, setMasonryPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 6;\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  const currentMasonryPosts = masonryPosts.slice(indexOfFirstPost, indexOfLastPost);\n  const page = (e, currentPage) => {\n    e.preventDefault();\n    setCurrentPage(currentPage);\n  };\n  useEffect(() => {\n    setPosts(dataPosts);\n    setMasonryPosts(dataPostsMasonry);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: type === \"grid\" || type === \"masonry\" ? \"pt-100 pb-100\" : null,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [type === \"sidebar-left\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: /*#__PURE__*/_jsxDEV(SidebarForBlog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(BlogWrapper, {\n          type: type,\n          children: type === \"masonry\" ? currentMasonryPosts.map((post, index) => /*#__PURE__*/_jsxDEV(BlogItemMasonry, {\n            id: post.id,\n            image: post.image,\n            title: post.title,\n            link: post.link ? post.link : null,\n            slides: post.slides ? post.slides : null,\n            published: post.published,\n            excerpt: post.excerpt,\n            type: post.type\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this)) : currentPosts.map((post, index) => ({\n            grid: /*#__PURE__*/_jsxDEV(BlogItemGrid, {\n              id: post.id,\n              index: index,\n              firstPost: indexOfFirstPost,\n              image: post.image,\n              title: post.title,\n              link: post.link ? post.link : null,\n              slides: post.slides ? post.slides : null,\n              published: post.published,\n              excerpt: post.excerpt,\n              type: post.type\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this),\n            sidebar: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(BlogItemSidebar, {\n                blogType: \"sidebar\",\n                id: post.id,\n                index: index,\n                firstPost: indexOfFirstPost,\n                image: post.image,\n                title: post.title,\n                link: post.link ? post.link : null,\n                slides: post.slides ? post.slides : null,\n                published: post.published,\n                excerpt: post.excerpt,\n                type: post.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 27\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this),\n            \"sidebar-left\": /*#__PURE__*/_jsxDEV(BlogItemSidebar, {\n              id: post.id,\n              index: index,\n              firstPost: indexOfFirstPost,\n              image: post.image,\n              title: post.title,\n              link: post.link ? post.link : null,\n              slides: post.slides ? post.slides : null,\n              published: post.published,\n              excerpt: post.excerpt,\n              type: post.type\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this),\n            \"sidebar-right\": /*#__PURE__*/_jsxDEV(BlogItemSidebar, {\n              id: post.id,\n              index: index,\n              firstPost: indexOfFirstPost,\n              image: post.image,\n              title: post.title,\n              link: post.link ? post.link : null,\n              slides: post.slides ? post.slides : null,\n              published: post.published,\n              excerpt: post.excerpt,\n              type: post.type\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)\n          })[type])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), type === \"sidebar-right\" || type === \"sidebar\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 offset-md-1 right-col-rv\",\n          children: /*#__PURE__*/_jsxDEV(SidebarForBlog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), type === \"masonry\" ? /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: masonryPosts.length,\n        page: page,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: posts.length,\n        page: page,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogContent, \"Sz901sx3reoqa6Et0c50r98Ydes=\");\n_c = BlogContent;\nexport default BlogContent;\nvar _c;\n$RefreshReg$(_c, \"BlogContent\");","map":{"version":3,"names":["React","useState","useEffect","BlogItemGrid","Pagination","BlogWrapper","dataPosts","dataPostsMasonry","BlogItemMasonry","BlogItemSidebar","SidebarForBlog","jsxDEV","_jsxDEV","BlogContent","_ref","_s","type","sidebar","posts","setPosts","masonryPosts","setMasonryPosts","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","currentMasonryPosts","page","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","index","id","image","title","link","slides","published","excerpt","grid","firstPost","blogType","totalPosts","length","_c","$RefreshReg$"],"sources":["/Users/guadalupeabrile/Documents/4. Gestion de Proyectos/Ash Phicology Webpage/Scoda-react/src/components/Blog/BlogContent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BlogItemGrid from \"./BlogItemGrid\";\nimport Pagination from \"../Pagination/Pagination\";\nimport BlogWrapper from \"./BlogWrapper\";\nimport dataPosts from \"../../data/Blog/blog-data.json\";\nimport dataPostsMasonry from \"../../data/Blog/blog-masonry-data.json\";\nimport BlogItemMasonry from \"./BlogItemMasonry\";\nimport BlogItemSidebar from \"./BlogItemSidebar\";\nimport SidebarForBlog from \"../Sidebar/SidebarForBlog\";\n\nconst BlogContent = ({ type, sidebar }) => {\n  const [posts, setPosts] = useState([]);\n  const [masonryPosts, setMasonryPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 6;\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  const currentMasonryPosts = masonryPosts.slice(\n    indexOfFirstPost,\n    indexOfLastPost\n  );\n\n  const page = (e, currentPage) => {\n    e.preventDefault();\n    setCurrentPage(currentPage);\n  };\n\n  useEffect(() => {\n    setPosts(dataPosts);\n    setMasonryPosts(dataPostsMasonry);\n  }, []);\n\n  return (\n    <section\n      className={type === \"grid\" || type === \"masonry\" ? \"pt-100 pb-100\" : null}\n    >\n      <div className=\"container\">\n        <div className=\"row\">\n          {type === \"sidebar-left\" ? (\n            <div className=\"col-md-3\">\n              <SidebarForBlog />\n            </div>\n          ) : null}\n          <BlogWrapper type={type}>\n            {type === \"masonry\"\n              ? currentMasonryPosts.map((post, index) => (\n                  <BlogItemMasonry\n                    key={post.id}\n                    id={post.id}\n                    image={post.image}\n                    title={post.title}\n                    link={post.link ? post.link : null}\n                    slides={post.slides ? post.slides : null}\n                    published={post.published}\n                    excerpt={post.excerpt}\n                    type={post.type}\n                  />\n                ))\n              : currentPosts.map(\n                  (post, index) =>\n                    ({\n                      grid: (\n                        <BlogItemGrid\n                          key={post.id}\n                          id={post.id}\n                          index={index}\n                          firstPost={indexOfFirstPost}\n                          image={post.image}\n                          title={post.title}\n                          link={post.link ? post.link : null}\n                          slides={post.slides ? post.slides : null}\n                          published={post.published}\n                          excerpt={post.excerpt}\n                          type={post.type}\n                        />\n                      ),\n                      sidebar: (\n                        <div className=\"col-md-6\" key={post.id}>\n                          <BlogItemSidebar\n                            blogType=\"sidebar\"\n                            id={post.id}\n                            index={index}\n                            firstPost={indexOfFirstPost}\n                            image={post.image}\n                            title={post.title}\n                            link={post.link ? post.link : null}\n                            slides={post.slides ? post.slides : null}\n                            published={post.published}\n                            excerpt={post.excerpt}\n                            type={post.type}\n                          />\n                        </div>\n                      ),\n                      \"sidebar-left\": (\n                        <BlogItemSidebar\n                          key={post.id}\n                          id={post.id}\n                          index={index}\n                          firstPost={indexOfFirstPost}\n                          image={post.image}\n                          title={post.title}\n                          link={post.link ? post.link : null}\n                          slides={post.slides ? post.slides : null}\n                          published={post.published}\n                          excerpt={post.excerpt}\n                          type={post.type}\n                        />\n                      ),\n                      \"sidebar-right\": (\n                        <BlogItemSidebar\n                          key={post.id}\n                          id={post.id}\n                          index={index}\n                          firstPost={indexOfFirstPost}\n                          image={post.image}\n                          title={post.title}\n                          link={post.link ? post.link : null}\n                          slides={post.slides ? post.slides : null}\n                          published={post.published}\n                          excerpt={post.excerpt}\n                          type={post.type}\n                        />\n                      ),\n                    }[type])\n                )}\n          </BlogWrapper>\n          {type === \"sidebar-right\" || type === \"sidebar\" ? (\n            <div className=\"col-md-3 offset-md-1 right-col-rv\">\n              <SidebarForBlog />\n            </div>\n          ) : null}\n        </div>\n        {type === \"masonry\" ? (\n          <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={masonryPosts.length}\n            page={page}\n            currentPage={currentPage}\n          />\n        ) : (\n          <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={posts.length}\n            page={page}\n            currentPage={currentPage}\n          />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default BlogContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}