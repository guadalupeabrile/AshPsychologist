{"ast":null,"code":"var _jsxFileName = \"/Users/guadalupeabrile/Documents/4. Gestion de Proyectos/Ash Phicology Webpage/Scoda-react/src/components/Navs/MegaDropdown.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MegaDropdown = _ref => {\n  let {\n    item,\n    itemsPerCol,\n    columnTitle\n  } = _ref;\n  let columns = Array(item.length / itemsPerCol);\n  let items = [];\n  for (var i = 0; i < item.length; i += itemsPerCol) {\n    items.push(item.slice(i, i + itemsPerCol));\n  }\n  const handleOpen = e => {\n    e.preventDefault();\n    const el = e.target;\n    if (el.nextSibling) {\n      if (el.parentElement.classList.contains(\"on\")) {\n        el.parentElement.classList.add(\"on\");\n        el.nextSibling.style.display = \"block\";\n      } else {\n        el.nextSibling.style.display = \"none\";\n        el.parentElement.classList.remove(\"on\");\n        el.nextSibling.style.opacity = 1;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"dropdown-menu dropdown-item megamenu-content animated\",\n    role: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: items.map((val, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-menu col-lg-\" + (columns.length === 3 ? \"4\" : \"3\") + \" col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"title\",\n            onClick: e => handleOpen(e),\n            children: columnTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content animated\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"menu-col\",\n              children: val.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: val[index][\"link\"],\n                  children: val[index][\"title\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = MegaDropdown;\nexport default MegaDropdown;\nvar _c;\n$RefreshReg$(_c, \"MegaDropdown\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","MegaDropdown","_ref","item","itemsPerCol","columnTitle","columns","Array","length","items","i","push","slice","handleOpen","e","preventDefault","el","target","nextSibling","parentElement","classList","contains","add","style","display","remove","opacity","className","role","children","map","val","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","index","to","_c","$RefreshReg$"],"sources":["/Users/guadalupeabrile/Documents/4. Gestion de Proyectos/Ash Phicology Webpage/Scoda-react/src/components/Navs/MegaDropdown.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MegaDropdown = ({ item, itemsPerCol, columnTitle }) => {\n  let columns = Array(item.length / itemsPerCol);\n  let items = [];\n  for (var i = 0; i < item.length; i += itemsPerCol) {\n    items.push(item.slice(i, i + itemsPerCol));\n  }\n\n  const handleOpen = (e) => {\n    e.preventDefault();\n    const el = e.target;\n    if (el.nextSibling) {\n      if (el.parentElement.classList.contains(\"on\")) {\n        el.parentElement.classList.add(\"on\");\n        el.nextSibling.style.display = \"block\";\n      } else {\n        el.nextSibling.style.display = \"none\";\n        el.parentElement.classList.remove(\"on\");\n        el.nextSibling.style.opacity = 1;\n      }\n    }\n  };\n\n  return (\n    <ul className=\"dropdown-menu dropdown-item megamenu-content animated\" role=\"menu\" >\n      <li>\n        <div className=\"row\">\n          {items.map((val, i) => (\n            <div\n            key={i}\n              className={\n                \"col-menu col-lg-\" + (columns.length === 3 ? \"4\" : \"3\") + \" col-md-12\"\n              }\n            >\n              <h6 className=\"title\" onClick={e => handleOpen(e)}>{columnTitle}</h6>\n              <div className=\"content animated\">\n                <ul className=\"menu-col\">\n                  {val.map((value, index) => (\n                    <li key={index}>\n                      <Link to={val[index][\"link\"]}>{val[index][\"title\"]}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ))}\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default MegaDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}